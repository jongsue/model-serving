apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
  namespace: {{ include "model-serving.namespace" . }}
  labels:
    {{- include "model-serving.labels" . | nindent 4 }}
    app: {{ .Values.postgres.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        {{- include "model-serving.labels" . | nindent 8 }}
        app: {{ .Values.postgres.name }}
    spec:
      containers:
      - name: {{ .Values.postgres.name }}
        image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        ports:
        - containerPort: {{ .Values.postgres.service.port }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-config
              key: POSTGRES_DB
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          {{- toYaml .Values.postgres.resources | nindent 10 }}
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: {{ .Values.postgres.name }}-pvc